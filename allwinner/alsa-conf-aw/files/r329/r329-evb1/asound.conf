
# R329
# audiocodec
# snddaudio0
# snddaudio1
# snddaudio2
# snddmic
# sndspdif

ctl.!default {
    type hw
    card audiocodec
}

pcm.!default {
    type asym
    playback.pcm "Playback"
    capture.pcm "CaptureDsnoop"
}

pcm.Playback {
    type plug
    slave.pcm {
        type softvol
        slave.pcm PlaybackDmix
        control {
            name "Soft Volume Master"
            card audiocodec
        }
        min_dB -51.0
        max_dB 0.0
        resolution 256
    }
    slave.rate 48000
    slave.format S16_LE
}

pcm.PlaybackDmix {
    type plug
    slave.pcm {
        type dmix
        ipc_key 1111
        ipc_perm 0666
        slave {
            pcm "hw:audiocodec"
            format S16_LE
            rate 48000
            channels 2
            period_size 1024
            periods 4
        }
    }
}

pcm.Capture {
    type hw
    card audiocodec
}

pcm.CaptureDsnoop {
    type plug
    slave.pcm {
        type dsnoop
        ipc_key 1111
        ipc_perm 0666
        slave {
            pcm "hw:audiocodec,0"
            rate 16000
            channels 5
            period_size 1024
            periods 4
        }
    }
}

pcm.CaptureDmicAec {
    type plug
    slave.pcm {
        type multi
        slaves {
            a { pcm "hw:snddmic,0,0" channels 3 }
            b { pcm "hw:audiocodec,0" channels 1 }
        }
        bindings {
            0 { slave a channel 0 }
            1 { slave a channel 1 }
            2 { slave a channel 2 }
            3 { slave b channel 0 }
        }
    }
    ttable.0.0 1
    ttable.1.1 1
    ttable.2.2 1
    ttable.3.3 1
}

pcm.CaptureDmic {
    type hw
    card "snddmic"
}

pcm.PlaybackSpdif {
    type hw
    card "sndspdif"
}

pcm.CaptureSpdif {
    type hw
    card "sndspdif"
}

pcm.PlaybackDaudioLoopback1 {
    type hooks
    slave.pcm "hw:snddaudio1"
    hooks.0 {
        type ctl_elems
        hook_args [
            {
                name "sunxi daudio loopback debug"
                preserve true
                lock true
                optional true
                value 1
            }
        ]
    }
}

pcm.LoopbackDaudio1 {
    type asym
    playback.pcm "PlaybackDaudioLoopback1"
    capture.pcm "hw:snddaudio1"
}

pcm.Daudio2 {
    type asym
    playback.pcm "hw:snddaudio2"
    capture.pcm "hw:snddaudio2"
}

pcm.PlaybackSpdifLoopback {
    type hooks
    slave.pcm "hw:sndspdif"
    hooks.0 {
        type ctl_elems
        hook_args [
            {
                name "sunxi spdif loopback debug"
                preserve true
                lock true
                optional true
                value 1
            }
        ]
    }
}

pcm.LoopbackSpdif {
    type asym
    playback.pcm "PlaybackSpdifLoopback"
    capture.pcm "CaptureSpdif"
}
